# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "vmd"
    "nvme"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  hardware.enableRedistributableFirmware = true;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/9dd79a41-eed0-4f77-9e7f-802b12f6e2a5";
    fsType = "btrfs";
    options = [
      "subvol=_active/@"
      "compress=zstd"
    ];
  };
  boot.initrd.luks.devices."cryptroot".device =
    "/dev/disk/by-uuid/04a281ed-c78e-4b1b-8bd2-c1aa1ea2949b";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/8AAA-234F";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
      "umask=0077"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/9dd79a41-eed0-4f77-9e7f-802b12f6e2a5";
    fsType = "btrfs";
    options = [
      "subvol=_active/@home"
      "compress=zstd"
    ];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/9dd79a41-eed0-4f77-9e7f-802b12f6e2a5";
    fsType = "btrfs";
    options = [
      "subvol=_active/log"
      "compress=zstd"
    ];
  };

  # Encrypted
  boot.initrd.luks.devices."swap" = {
    device = "/dev/disk/by-uuid/c3c90fd5-11a8-42e8-bda4-e6529cf0c357";

    # SSD optimisations
    allowDiscards = true;
    bypassWorkqueues = true;
  };

  swapDevices = [ { label = "swap"; } ];
  boot.resumeDevice = "/dev/disk/by-label/swap";

  # Not encrypted!
  # swapDevices =
  #   [ { device = "/dev/disk/by-uuid/75f46be3-c26d-4710-9878-0196083d3091"; }
  #   ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
