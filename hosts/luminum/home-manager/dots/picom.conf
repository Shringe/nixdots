# GENERAL ================================================================================= 
# glx for blur and GPU accelleration, but some performance issues occur with my Nvidia GPU. 
# xrender for safer CPU rendering
backend = "glx"
# disables compositor in full screen games
unredir-if-possible = true;
# multi monitor mixed refresh rate setups must have vsync disabled, or vsync will lower all displays to lowest common refresh rate, same for any X11 compositor
vsync = true;

# expiremental latency decrease
realtime = true;

# SHADOW ================================================================================= 
shadow = true;
shadow-exclude = [
  "I3_FLOATING_WINDOW@ != 'True'", # exclude tiled windows in i3 and qtile
];

# BLUR ================================================================================= 
blur-method = "dual_kawase"
blur-strength = 4

blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "QTILE_INTERNAL = 1",
  "WM_WINDOW_ROLE = 'Popup'",
];

# Blur background of semi-transparent / ARGB windows.
# Bad in performance, with driver-dependent behavior.
# The name of the switch may change without prior notifications.
#
blur-background = false

# Blur background of windows when the window frame is not opaque.
# Implies:
#  blur-background
# Bad in performance, with driver-dependent behavior. The name may change.
#
blur-background-frame = false 


# Use fixed blur strength rather than adjusting according to window opacity.
blur-background-fixed = false

# SHADOW =================================================================================
corner-radius = 10
rounded-corners-exclude = [
  "QTILE_INTERNAL = 1",
  "window_type = 'dock'",
  "I3_FLOATING_WINDOW@ != 'True'", 
]

# ANIMATIONS =================================================================================
# Animations from https://github.com/lactua/dotfiles
animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  # {
  #   triggers = [""];
  #   opacity = {
  #     curve = "cubic-bezier(0,1,1,1)";
  #     duration = 0.25;
  #     start = 0;
  #     end = "window-raw-opacity";
  #   };
  #   blur-opacity = "opacity";
  #   shadow-opacity = "opacity";
  #   offset-x = "(1 - scale-x) / 2 * window-width";
  #   offset-y = "(1 - scale-y) / 2 * window-height";
  #   scale-x = {
  #     curve = "cubic-bezier(0,1.3,1,1)";
  #     duration = 0.25;
  #     start = 0.6;
  #     end = 1;
  #   };
  #   scale-y = "scale-x";
  #   shadow-scale-x = "scale-x";
  #   shadow-scale-y = "scale-y";
  #   shadow-offset-x = "offset-x";
  #   shadow-offset-y = "offset-y";
  # },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.19;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.19;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.19;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.19;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)

